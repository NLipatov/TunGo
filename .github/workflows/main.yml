name: tungo-workflow
on:
  push:
    branches:
      - main
      
jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.x'

      - name: Install dependencies
        run: |
          cd src
          go mod tidy

      - name: Run tests with coverage
        run: |
          cd src
          sudo go test -coverprofile=coverage.txt ./...
          
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: src/coverage.txt
          flags: unittests
          fail_ci_if_error: true

  build-image:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.x'

      - name: Install dependencies
        run: |
          cd src
          go mod tidy

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build a Docker container
        run: docker build -t tungo src

      - name: Tag Docker image as latest
        run: docker tag tungo:latest nlipatov/tungo:tungo

      - name: Push image to hub
        run: docker push nlipatov/tungo:tungo

  redeploy:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Redeploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd tungo
            sudo docker compose pull && sudo docker compose up -d --remove-orphans --build && sudo docker system prune -f
