name: e2e-tungo-tailscale
on:
  workflow_dispatch:

env:
  SERVER_TUN_IP: 10.0.0.1

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: ensure TAILSCALE_KEY
        run: |
          [ -n "${{ secrets.TAILSCALE_KEY }}" ] || { echo "::error:: missing TAILSCALE_KEY"; exit 1; }

      - name: install tailscale
        run: curl -fsSL https://tailscale.com/install.sh | sh

      - name: tailscale up
        run: |
          sudo tailscale up --authkey "${{ secrets.TAILSCALE_KEY }}" --hostname tungo-ci-combined --accept-routes --timeout 30s
          tailscale ip -4

      - name: get ts ip
        id: tsip
        run: echo "ts_ip=$(tailscale ip -4 | head -n1)" >> $GITHUB_OUTPUT

      - name: fetch tungo
        run: |
          curl -fsSL "https://github.com/NLipatov/TunGo/releases/latest/download/tungo-linux-amd64" -o tungo
          chmod +x tungo
          sudo mv tungo /usr/local/bin/tungo

      - name: gen client cfg + ensure keys + patch ip
        run: |
          set -euo pipefail
          export DEBIAN_FRONTEND=noninteractive
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update -qq
            sudo apt-get install -y -qq --no-install-recommends jq
          fi
          gen() { sudo tungo s gen > client_linux.json; }
          key_ok() { v=$(jq -r '.Ed25519PublicKey // empty' client_linux.json); [ -n "$v" ]; }
          gen
          if ! key_ok; then
            timeout 2s sudo tungo s >/tmp/tungo-init.log 2>&1 || true
            gen
            key_ok || { echo "::error:: Ed25519PublicKey empty"; exit 1; }
          fi
          jq --arg ip "${{ steps.tsip.outputs.ts_ip }}" '.TCPSettings.ConnectionIP=$ip | .UDPSettings.ConnectionIP=$ip' client_linux.json > tmp && mv tmp client_linux.json
          sudo install -d -m 0755 /etc/tungo
          sudo install -m 0644 client_linux.json /etc/tungo/client_configuration.json

      - name: start server
        run: |
          sudo tungo s > server.log 2>&1 &
          for i in {1..10}; do sudo ss -lun | grep -q ':9090' && break; sleep 1; done
          sudo ss -lun | grep -q ':9090' || (cat server.log; exit 1)

      - name: start client
        run: |
          sudo tungo c > client.log 2>&1 &
          for i in {1..30}; do pgrep -a tungo >/dev/null && break; sleep 1; done
          pgrep -a tungo >/dev/null || (cat client.log; exit 1)

      - name: check tunnel up
        run: |
          ip addr show | grep -E 'udptun0|tcptun0' || ip route | grep -E '10\.0\.0\.0/24' || { cat client.log server.log || true; exit 1; }

      - name: ping server tun ip
        run: |
          ping -c 3 "${SERVER_TUN_IP}" || { cat client.log server.log || true; exit 1; }

      - name: upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: |
            server.log
            client.log
