name: Build Installer for Windows x64

on:
  workflow_dispatch:

jobs:
  build-installer-windows-x64:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.x'

      - name: Install dependencies
        run: |
          cd src
          go mod tidy

      - name: Build Go binary for Windows-x64
        run: |
          cd src
          GOARCH=amd64 go build -o ../tungo-win-x64.exe .

      - name: Install Inno Setup via Chocolatey
        run: choco install innosetup -y

      - name: Download wintun archive
        run: |
          Invoke-WebRequest -Uri "https://www.wintun.net/builds/wintun-0.14.1.zip" -OutFile "wintun.zip"
          Expand-Archive -Path "wintun.zip" -DestinationPath "wintun"
          Copy-Item -Path "wintun\wintun\bin\amd64\wintun.dll" -Destination "."

      - name: Download TunGo.ico
        run: Invoke-WebRequest -Uri "https://tungo.ethacore.com/img/favicon.ico" -OutFile "TunGo.ico"

      - name: Create Inno Setup Script
        run: |
          @"
          [Setup]
          AppName=TunGo
          AppVersion=1.0
          DefaultDirName={pf}\TunGo
          DefaultGroupName=TunGo
          OutputBaseFilename=TunGo
          PrivilegesRequired=admin
          ArchitecturesAllowed=x86 x64
          ArchitecturesInstallIn64BitMode=x64

          [Files]
          Source: "wintun.dll"; Flags: dontcopy
          Source: "tungo-win-x64.exe"; DestDir: "{app}"; Flags: ignoreversion
          Source: "TunGo.ico"; DestDir: "{app}"; Flags: ignoreversion
          Source: "RunWithAdmin.ps1"; DestDir: "{app}"; Flags: ignoreversion

          [Icons]
          Name: "{group}\TunGo (Admin)"; Filename: "powershell.exe"; Parameters: "-ExecutionPolicy Bypass -File ""{app}\RunWithAdmin.ps1"""; WorkingDir: "{app}"; IconFilename: "{app}\TunGo.ico"

          [Code]
          procedure CopyWintunDll;
          var
            sysDir, targetFile, tempFile: string;
          begin
            sysDir := ExpandConstant('{sys}');
            targetFile := sysDir + '\wintun.dll';
            if not FileExists(targetFile) then begin
              ExtractTemporaryFile('wintun.dll');
              tempFile := ExpandConstant('{tmp}\wintun.dll');
              if not FileCopy(tempFile, targetFile, False) then
                MsgBox('Failed to copy wintun.dll to ' + sysDir, mbError, MB_OK);
            end;
          end;

          procedure CurStepChanged(CurStep: TSetupStep);
          begin
            if CurStep = ssPostInstall then
              CopyWintunDll;
          end;
          "@ | Out-File setup.iss -Encoding utf8

      - name: Build installer with Inno Setup
        run: ISCC.exe setup.iss

      - name: Upload Installer Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TunGo-Installer
          path: TunGo.exe
